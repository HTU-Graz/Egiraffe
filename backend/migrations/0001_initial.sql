-- This script was generated by the ERD tool in pgAdmin 4.
-- We now use it as the initial migration, opting for hand-written migrations from now on.
-- This was initially hand-edited on 2024-05-04 01:09:50
-- Once the system goes in production, this file becomes finalized, as it's hash must stay the same.
BEGIN;

CREATE TABLE IF NOT EXISTS university (
    id uuid PRIMARY KEY,
    name_full character varying(100) NOT NULL,
    name_mid character varying(50) NOT NULL,
    name_short character varying(50) NOT NULL,
    domain_names character varying(100) [] NOT NULL
);

CREATE TABLE IF NOT EXISTS "user" (
    id uuid PRIMARY KEY,
    first_names character varying(200),
    last_name character varying(200),
    primary_email uuid NOT NULL,
    password_hash character varying(250) NOT NULL,
    totp_secret character varying(50),
    nick character varying(100),
    user_role smallint NOT NULL DEFAULT 1
);

CREATE TABLE IF NOT EXISTS email (
    id uuid PRIMARY KEY,
    address character varying(500),
    belongs_to_user uuid NOT NULL,
    of_university uuid,
    STATUS character(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS email_status (
    STATUS character(20) NOT NULL,
    PRIMARY KEY (STATUS)
);

CREATE TABLE IF NOT EXISTS upload (
    id uuid PRIMARY KEY,
    upload_name character varying(200) NOT NULL,
    description text NOT NULL,
    price smallint NOT NULL,
    uploader uuid NOT NULL,
    upload_date timestamp without time zone NOT NULL,
    last_modified_date timestamp without time zone NOT NULL,
    belongs_to uuid NOT NULL,
    held_by uuid
);

CREATE TABLE IF NOT EXISTS course (
    id uuid NOT NULL,
    held_at uuid NOT NULL,
    course_name character varying(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS purchase (
    -- This table uses a composite primary key
    user_id uuid,
    upload_id uuid,
    ecs_spent smallint NOT NULL,
    purchase_date timestamp without time zone NOT NULL,
    rating smallint,
    PRIMARY KEY (user_id, upload_id)
);

CREATE TABLE IF NOT EXISTS system_ec_transaction (
    -- This table uses a composite primary key
    affected_user uuid,
    transaction_date timestamp without time zone NOT NULL,
    delta_ec bigint NOT NULL,
    reason character varying(1000),
    PRIMARY KEY (affected_user, transaction_date)
);

CREATE TABLE IF NOT EXISTS SESSION (
    id uuid PRIMARY KEY,
    of_user uuid,
    token character(43) NOT NULL,
    initial_user_agent character varying(275),
    latest_user_agent character varying(275),
    initial_ip inet,
    latest_ip inet
);

CREATE TABLE IF NOT EXISTS prof (
    id uuid PRIMARY KEY,
    prof_name character varying(500) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILE (
    id uuid PRIMARY KEY,
    name character varying(255) NOT NULL,
    mime_type character varying(200) NOT NULL,
    size bigint NOT NULL,
    revision_at timestamp without time zone NOT NULL,
    upload_id uuid NOT NULL,
    approval_uploader boolean NOT NULL,
    approval_mod boolean NOT NULL
);

ALTER TABLE
    IF EXISTS "user"
ADD
    FOREIGN KEY (primary_email) REFERENCES email (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS email
ADD
    CONSTRAINT belongs_to_user_fk FOREIGN KEY (belongs_to_user) REFERENCES "user" (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS email
ADD
    CONSTRAINT of_university_fk FOREIGN KEY (of_university) REFERENCES university (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS email
ADD
    CONSTRAINT email_status_fk FOREIGN KEY (STATUS) REFERENCES email_status (STATUS) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS upload
ADD
    FOREIGN KEY (uploader) REFERENCES "user" (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS upload
ADD
    FOREIGN KEY (belongs_to) REFERENCES course (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS upload
ADD
    FOREIGN KEY (held_by) REFERENCES prof (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS course
ADD
    FOREIGN KEY (held_at) REFERENCES university (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS purchase
ADD
    FOREIGN KEY (user_id) REFERENCES "user" (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS purchase
ADD
    FOREIGN KEY (upload_id) REFERENCES upload (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS system_ec_transaction
ADD
    FOREIGN KEY (affected_user) REFERENCES "user" (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS SESSION
ADD
    FOREIGN KEY (of_user) REFERENCES "user" (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

ALTER TABLE
    IF EXISTS FILE
ADD
    FOREIGN KEY (upload_id) REFERENCES upload (id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;

END;
